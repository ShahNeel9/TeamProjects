/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ManageFlightSchedule;

import Buisness.AirlinerDirectory;
import Buisness.Flight;
import Buisness.FlightDirectory;
import static Buisness.FlightDirectory.flightdirectory;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author patel
 */
public class ViewFlightSchedule extends javax.swing.JPanel {

    /**
     * Creates new form ViewFlightSchedule
     */
     private JPanel CardSequenceJpanel;
     private Flight flight;
  //  private AirlinerDirectory airlinerdirectory;
    private FlightDirectory flightdirectory;
    public ViewFlightSchedule(JPanel CardSequenceJpanel,Flight flight) {
        initComponents();
        this.CardSequenceJpanel=CardSequenceJpanel;
        this.flight = flight;
       // this.airlinerdirectory=airlinerdirectory;
        //this.flightdirectory = flightdirectory;
        //DateFormat dateFormat = new SimpleDateFormat("yyyy-mm-dd");
        //String date = dateFormat.format(flight.getDate());
        Date date = jXDatePicker.getDate();
        txtAirliner.setText(flight.getAirline());
        txtFlightN.setText(flight.getFlightnumber());
        txtSource.setText(flight.getSource());
        txtDestination.setText(flight.getDestination());
        txtArrival.setText(flight.getArrTime());
        txtDeparture.setText(flight.getDepTime());
        txtDuration.setText(Integer.toString(flight.getDuration()));
        jXDatePicker.setDate(date);
        txtxotod.setText(flight.getTime());
        txtModel.setText(flight.getModel());        
        txtPrice.setText(Double.toString(flight.getPrice()));
            
        txtAirliner.setEnabled(false);
        txtFlightN.setEnabled(false);
        txtModel.setEnabled(false);
        txtSource.setEnabled(false);
        txtDestination.setEnabled(false);
        txtArrival.setEnabled(false);
        txtDeparture.setEnabled(false);
        txtDuration.setEnabled(false);
        txtPrice.setEnabled(false);
        txtxotod.setEnabled(false);
        
    }

   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtFlightN = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtSource = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtDestination = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtDeparture = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtArrival = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtDuration = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtxotod = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtModel = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        txtAirliner = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        jXDatePicker = new org.jdesktop.swingx.JXDatePicker();
        btnBack = new javax.swing.JButton();

        jTextField1.setText("jTextField1");

        jTextField2.setText("jTextField2");

        jLabel1.setText("View Flight Schedule");

        jLabel2.setText("Airliner");

        jLabel3.setText("Flight Number");

        jLabel4.setText("Source");

        txtSource.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSourceActionPerformed(evt);
            }
        });

        jLabel5.setText("Destination");

        jLabel6.setText("Departure Time");

        jLabel7.setText("Arrival Time");

        jLabel8.setText("Duration");

        jLabel9.setText("Date");

        jLabel10.setText("Operated Time Of Day");

        jLabel11.setText("Model");

        txtModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtModelActionPerformed(evt);
            }
        });

        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnSave.setText("SAVE");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jLabel12.setText("Price");

        txtPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(273, 273, 273))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(194, 194, 194)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 217, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtDestination, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtSource, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel2))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtFlightN, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                                .addComponent(txtAirliner)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel9))
                                    .addGap(49, 49, 49))
                                .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(54, 54, 54)
                                    .addComponent(btnUpdate))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(136, 136, 136)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtModel, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                                        .addComponent(txtxotod, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                                        .addComponent(txtDuration, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                                        .addComponent(txtArrival, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                                        .addComponent(txtDeparture, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                                        .addComponent(txtPrice)
                                        .addComponent(jXDatePicker, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtAirliner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtFlightN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtSource, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtDestination, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtDeparture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtArrival, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jXDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(28, 28, 28)
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtxotod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnUpdate))
                .addGap(84, 84, 84))
        );

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 24, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 25, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnBack)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtSourceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSourceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSourceActionPerformed

    private void txtModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtModelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtModelActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        
        DateFormat dateFormat = new SimpleDateFormat("yyyy-mm-dd");
       // String date = dateFormat.format(flight.getDate());
        String airliner = txtAirliner.getText();
         Date date = jXDatePicker.getDate();
        String Flightnumber = txtFlightN.getText();
        String model = txtModel.getText();
        String source = txtSource.getText();
        String destination = txtDeparture.getText();
        String deptime = txtDeparture.getText();
        String Aritime = txtArrival.getText();
        int duration = Integer.parseInt(txtDuration.getText());
        //Date date = jXDatePicker.getDate();
        String optd = txtxotod.getText();
        double price = Double.parseDouble(txtPrice.getText());
        
        if(airliner == null & airliner == " "){
            
            txtAirliner.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel2.setBackground(Color.RED);
            JOptionPane.showMessageDialog(null, "enter Airliner");
            return;
        }else{
            txtAirliner.setBorder(BorderFactory.createLineBorder(Color.BLACK));
            jLabel2.setBackground(Color.BLACK);
        }
        
        if(Flightnumber == null & Flightnumber == " "){
            
            txtFlightN.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel3.setBackground(Color.RED);
            JOptionPane.showMessageDialog(null, "Please Enter Flight Number");
            return;
        }else{
            txtFlightN.setBorder(BorderFactory.createLineBorder(Color.BLACK));
            jLabel3.setBackground(Color.BLACK);
        }
        
        if(model == null & model == " "){
            
            txtModel.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel11.setBackground(Color.RED);
            JOptionPane.showMessageDialog(null, "Please enter Model");
            return;
        }else{
            txtModel.setBorder(BorderFactory.createLineBorder(Color.BLACK));
            jLabel11.setBackground(Color.BLACK);
        }
        
        if(source == null & source == " "){
            
            txtSource.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel4.setBackground(Color.RED);
            JOptionPane.showMessageDialog(null, "Please enter Source");
            return;
        }else{
            txtSource.setBorder(BorderFactory.createLineBorder(Color.BLACK));
            jLabel4.setBackground(Color.BLACK);
        }
        if(destination == null & destination == " "){
            
            txtDestination.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel5.setBackground(Color.RED);
            JOptionPane.showMessageDialog(null, "Please enter Destination");
            return;
        }else{
            txtSource.setBorder(BorderFactory.createLineBorder(Color.BLACK));
            jLabel5.setBackground(Color.BLACK);
        }
        
        if(Aritime == null & Aritime == " "){
            
            txtArrival.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel7.setBackground(Color.RED);
            JOptionPane.showMessageDialog(null, "Please enter Arrival Time");
            return;
        }else{
            txtArrival.setBorder(BorderFactory.createLineBorder(Color.BLACK));
            jLabel7.setBackground(Color.BLACK);
        }
        if(deptime == null & deptime == " "){
            
            txtDeparture.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel6.setBackground(Color.RED);
            JOptionPane.showMessageDialog(null, "Please enter Departure Time");
            return;
        }else{
            txtDeparture.setBorder(BorderFactory.createLineBorder(Color.BLACK));
            jLabel6.setBackground(Color.BLACK);
        }
        
        if(optd == null & optd == " "){
            
            txtxotod.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel10.setBackground(Color.RED);
            JOptionPane.showMessageDialog(null, "Select Operated Time Of Day");
            return;
        }else{
            txtxotod.setBorder(BorderFactory.createLineBorder(Color.BLACK));
            jLabel10.setBackground(Color.BLACK);
        }
        
        try{
           Integer.parseInt(txtDuration.getText());
            txtDuration.setBorder(BorderFactory.createLineBorder(Color.BLACK));
            jLabel8.setForeground(Color.BLACK);
        }
        catch(Exception e){
            txtDuration.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel8.setForeground(Color.RED);
            JOptionPane.showMessageDialog(null, "Please enter Duration");
            return;
        }
        
        try{
            Double.parseDouble(txtPrice.getText());
            txtPrice.setBorder(BorderFactory.createLineBorder(Color.BLACK));
            jLabel12.setForeground(Color.BLACK);
        }
        catch(Exception e){
            txtPrice.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel12.setForeground(Color.RED);
            JOptionPane.showMessageDialog(null, "Please enter Price");
            return;
        }
        
        if(jXDatePicker.getDate().equals( " " )){
            jXDatePicker.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel9.setBackground(Color.RED);
            JOptionPane.showMessageDialog(null, "Select Date");
            return;
        }else{
            jXDatePicker.setBorder(BorderFactory.createLineBorder(Color.BLACK));
            jLabel9.setBackground(Color.BLACK);
        }
        
       // Flight f = new Flight();
        flight.setAirline(airliner);
        flight.setFlightnumber(Flightnumber);
        flight.setModel(model);
        flight.setSource(source);
        flight.setDestination(destination);
        flight.setArrTime(Aritime);
        flight.setDate(date);
        flight.setDuration(duration);
        flight.setTime(optd);
        flight.setPrice(price);
        flightdirectory.addFlight(flight);
        
        txtAirliner.setText("");
        txtFlightN.setText("");
        txtModel.setText("");
        txtSource.setText("");
        txtDestination.setText("");
        txtArrival.setText("");
        txtDeparture.setText("");
        txtDuration.setText("");
        txtPrice.setText("");
        txtxotod.setText("");
        
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPriceActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        txtAirliner.setEnabled(true);
        txtFlightN.setEnabled(true);
        txtModel.setEnabled(true);
        txtSource.setEnabled(true);
        txtDestination.setEnabled(true);
        txtArrival.setEnabled(true);
        txtDeparture.setEnabled(true);
        txtDuration.setEnabled(true);
        txtPrice.setEnabled(true);
        txtxotod.setEnabled(true);
        
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        CardSequenceJpanel.remove(this);
        CardLayout layout = (CardLayout)CardSequenceJpanel.getLayout();
        
        Component[] components = CardSequenceJpanel.getComponents();
        for(Component component: components){
            if(component instanceof ManageFlightSchedule){
                ManageFlightSchedule manage = (ManageFlightSchedule) component;
                manage.PopulateTable();
            }
            
        }
        layout.previous(CardSequenceJpanel);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker;
    private javax.swing.JTextField txtAirliner;
    private javax.swing.JTextField txtArrival;
    private javax.swing.JTextField txtDeparture;
    private javax.swing.JTextField txtDestination;
    private javax.swing.JTextField txtDuration;
    private javax.swing.JTextField txtFlightN;
    private javax.swing.JTextField txtModel;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtSource;
    private javax.swing.JTextField txtxotod;
    // End of variables declaration//GEN-END:variables
}
